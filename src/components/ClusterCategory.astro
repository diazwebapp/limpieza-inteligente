---
const { cats } = Astro.props;

---

<ul class="cluster-nav">

    {cats.map(cat => (
      <li class="cluster-item">
        <a href={cat.link}>
            <article>
                <figure>
                    <img src={cat.image} alt={cat.title} loading="lazy" width="200" height="200"/>
                </figure>
                <div class="content">
                    <h3>{cat.title}</h3>
                    <p>{cat.description}</p>
                </div>
            </article>
        </a>
      </li>
    ))}
</ul>
<style>
/* Cluster de navegacion */
.cluster-nav {
  list-style: none;
}
.cluster-nav article {
  display: flex;
  flex-direction: column; /* Default to column for mobile */
  border-radius: var(--rounded);
  transition: all ease-in-out 0.3s;
}

.cluster-nav article:hover {
  transform: scale(1.02);
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
}

.cluster-nav article .content {
  width: 100%; /* Full width for mobile */
  display: block;
  padding: 16px;
  order: 2; /* Content after figure for mobile */
}

.cluster-nav article figure {
  width: 100%; /* Full width for mobile */
  height: 220px; /* Specific height for mobile figure container */
  overflow: hidden;
  border-radius: var(--rounded);
  margin-top: 0;
  order: 1; /* Figure before content for mobile */
  padding: 10px;
  background: linear-gradient(120deg, #b8057c 0%, var(--secondary) 100%);
  display: flex;
  justify-content: center;
  align-items: center;
}

.cluster-nav article figure img {
  width: 200px; /* Specific image size for mobile */
  height: 200px;
  object-fit: contain; /* Ensure the image fits within the container */
}

/* Alternate order for every second item on mobile (figure then content) */
.cluster-nav a:nth-child(2n) article .content {
  order: 2;
}

.cluster-nav a:nth-child(2n) article figure {
  order: 1;
}

@media (min-width: 768px) {
  .cluster-nav article {
    flex-direction: row; /* Change to row for desktop */
    flex-wrap: nowrap;
  }

  .cluster-nav article .content {
    width: calc(100% - 200px); /* Adjust width for desktop */
  }

  .cluster-nav article figure {
    width: 220px; /* Fixed width for desktop figure */
    height: 220px; /* Fixed height for desktop figure */
    margin-top: 15px;
  }

  .cluster-nav article figure img {
    width: 100%; /* Image takes full width of desktop figure */
    height: 100%; /* Image takes full height of desktop figure */
    object-fit: contain; /* Cover the area, cropping if necessary */
  }

  /* Alternate order for every second item on desktop (content then figure) */
  .cluster-nav li:nth-child(2n) article .content {
    order: 1;
  }

  .cluster-nav li:nth-child(2n) article figure {
    order: 2;
  }
}

@media (min-width: 1280px) {
  .cluster-nav {
    display: flex;
    flex-wrap: wrap
  }
.cluster-nav li:nth-child(2n) article .content {
    order: unset;
  }

  .cluster-nav li:nth-child(2n) article figure {
    order: unset;
  }
  .cluster-nav li{
    width: 50%;
  }
.cluster-nav article .content {
    width: 100% ; /* Adjust width for desktop */
  }

  .cluster-nav article figure {
    width: 100%; /* Fixed width for desktop figure */
    height: 220px; /* Fixed height for desktop figure */
    margin-top: 15px;
  }
}
</style>