---
import { Image } from "astro:assets";
import type { productSpecs } from "../datos/products";
import { undefined } from "astro:schema";

type Props={
  title: string;
  img: string;
  caracteristicas: productSpecs | undefined;
  slogan?: string;
  rating?: number;
  reviews?: number;
  buyLink: string;
}
const { title, img, caracteristicas, rating=0, reviews=0, buyLink } = Astro.props as Props
const specs = Object.entries(caracteristicas || {});
// Función para renderizar estrellas
function renderStars(rating: number) {
  const fullStars = Math.floor(rating);
  const halfStar = rating % 1 >= 0.5;
  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0);
  let stars = "★".repeat(fullStars);
  if (halfStar) stars += "☆";
  stars += "✩".repeat(emptyStars);
  return stars;
}
---

<div class="product-header">
  <div class="container">
    <div class="header-content">
      <div class="image-section">
        <Image transition:name={title} src={img} width={330} height={330} alt={`Imagen de ${title}`} loading="lazy" />
      </div>
    <div class="info-section">
      <h1>{title}</h1>
      <div class="rating-block">
        <span class="rating-number">{rating}</span>
        <span class="stars">
          {renderStars(rating)}
        </span>
          
        <div class="reviews">({reviews.toLocaleString()} opiniones)</div>
      </div>
      <ul class="caracteristicas">
        {
          specs.map(([key, value]) =>(
            <li class="capitalize">
                <strong>{key.replaceAll('_', ' ')}:</strong>{' '}
                {Array.isArray(value) ? value.join(', ') : value === true ? 'Sí' : value === false ? 'No' : value}
            </li>
          ) )
        }
      </ul>
      <a href={buyLink} target="_blank" rel="noopener nofollow noreferrer" class="amazon-btn">
        ver en Amazon
      </a>
    </div>
  </div>

<style>
/* Mobile-first styles */
.product-header {
  width: 100%;
  background: linear-gradient(135deg, #f8fafc 60%, #e0e7ff 100%);
  padding: 1rem 0;
}

.header-content {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1.5rem;
  align-items: center;
  justify-content: center;
  margin: 20px auto;
}

.image-section {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}
.image-section :global(img) {
  width: 330px;
  height: 330px;
  padding: 10px;
  border-radius: 1.5rem;
  background: #fff;
  box-shadow: 0 8px 32px rgba(0,0,0,0.12);
  object-fit: contain;
}

.info-section {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  background: rgba(255,255,255,0.85);
  border-radius: 1.5rem;
  padding: 1rem 0.5rem;
  box-shadow: 0 4px 24px rgba(0,0,0,0.07);
}
.caracteristicas{
  list-style: none;
  padding-left: 0;
}

.info-section h1 {
  font-weight: 700;
  color: #1e293b;
  margin: 0;
}
.description {
  color: #475569;
  margin-bottom: 0.5rem;
}
.rating-block {
  width: 300px;
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: .5rem;
  margin-bottom: 0.5rem;
}
.stars {
  color: #ff9900;
  font-size: 1.7rem;
}
.rating-number {
  color: #f59e42;
  font-size: 1.2rem;
  padding-top: 4px;
}
.reviews {
  color: #64748b;
}
.capitalize {
  text-transform: capitalize;
}
.amazon-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.7rem;
  background: linear-gradient(90deg, #ff9900 60%, #f59e42 100%);
  color: #fff;
  font-weight: 700;
  border: none;
  border-radius: 2rem;
  padding: 0.8rem;
  text-decoration: none;
  box-shadow: 0 2px 8px rgba(255,153,0,0.10);
  transition: background 0.2s, transform 0.2s;
  margin-bottom: 0.5rem;
}
.amazon-btn:hover {
  background: linear-gradient(90deg, #f59e42 60%, #ff9900 100%);
  transform: translateY(-2px) scale(1.03);
}

.buy-card {
  display: grid;
  grid-template-columns: 1fr;
  background: #fff;
  border-radius: 1.2rem;
  box-shadow: 0 2px 12px rgba(0,0,0,0.07);
  text-align: center;
}
.buy-card h2 {
  color: #1e293b;
  margin-bottom: 1rem;
}
.buy-card p {
  color: #475569;
  padding: 0 1rem;
}

/* Desktop breakpoint */
@media (min-width: 916px) {
  .header-content {
    grid-template-columns: 1fr 1fr;
    align-items: flex-start;
    gap: 2rem;
    padding: 2rem 1rem;
  }
  .image-section,
  .info-section {
    width: auto;
  }
  .info-section {
    padding: 2rem 2rem 2rem 2rem;
  }
  
  .buy-card {
    padding: 2rem;
    grid-template-columns: 1fr 1fr;
  }
  .buy-card p {
    padding: 0 5rem;
  }
}
</style>
